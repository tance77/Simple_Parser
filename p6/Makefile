# YOU MUST READ THESE COMMENTS
#
# In order to use this make file
#
#     Step 1) MACHINE: comment out the machines you are not using
#     Step 2) FILES: when you create a new file, make sure you list it
#     Step 3) PHASE: make sure you have the correct phase turned on
#
# ISSUES:
#           this makefile will only work properly with gnu make 
#           it is a very good idea to install makedepend and run "make make"
#               makedepend often issues lots of warnings with ANSI C++ files
#                   but it will still find all the dependencies you need 
#           if you rename the file from Makefile to makefile you must
#               change the dependency for gpl.o (hard to notice on WinXp & OSX)

CXX = g++
CPPFLAGS = -g -Wall -pedantic

# ************************************************************************
# STEP 1) MACHINE uncomment the lines for the machine you are compiling on

# windows/cygwin libraries (comment out if not using windows/cygwin)
#LIBS = -lfl  -lopengl32 -lglut32 -lglu32

# linux/UNIX libraries (comment out next two lines if not using linux/unix)
#LIBDIRS  = -L/usr/X11R6/lib
#LIBS = -lX11 -lglut -lGL -lGLU -lm -lfl
# older versions of linux might also need -lXi and -lXmu 

# OS X (comment out these lines if not using OSX)
#   -- if this doesn't work, replace the directory specified using -I
#      with the one glut.h lives in (use the locate to find it "$locate glut.h")
LIBS = -framework GLUT -framework OpenGL -lobjc
CPPFLAGS = -g -I/System/Library/Frameworks/GLUT.framework/Versions/A/Headers


# ************************************************************************
# STEP 2) FILES

# when you add a new .cpp file to your program, put it in the following
# list, and also put a .o version in the C++OBJ list
# Use a \ at the end of the line to continue on next line

C++SRC = error.cpp gpl_assert.cpp gpl.cpp indent.cpp variable.cpp expression.cpp symbol.cpp symbol_table.cpp animation_block.cpp circle.cpp event_manager.cpp game_object.cpp pixmap.cpp rectangle.cpp statement_block.cpp textbox.cpp triangle.cpp window.cpp gpl_type.cpp
	 
C++OBJ = error.o gpl_assert.o gpl.o indent.o variable.o expression.o symbol.o symbol_table.o animation_block.o circle.o event_manager.o game_object.o pixmap.o rectangle.o statement_block.o textbox.o triangle.o window.o gpl_type.o

# command to compile the gpl executable
gpl: y.tab.o lex.yy.o $(C++OBJ)
	g++ -g -o gpl y.tab.o lex.yy.o $(C++OBJ) $(LIBDIRS) $(LIBS)

# ************************************************************************
# STEP 3) PHASE -- select the correct version of flags for gpl.cpp
#
# comment out the phases you are NOT working on
#     gpl.cpp uses three flags (SYMBOL_TABLE, PRINT_SYMBOL_TABLE, GRAPHICS)
#     to control how it is compiled.  You can set any combination of these
#     flags on the compilation command line.
#     The following allow you to select the correct combination for 
#     the phase you are currently working on
#     WARNING: must start command lines with a tab (i.e. before the g++)

# Phase 2 & 3: no symbol table, no graphics
#gpl.o: gpl.cpp Makefile
#	g++ $(CPPFLAGS) -c gpl.cpp -o gpl.o

# Phase 4 & 5: symbol table AND print the symbol table, no graphics
#gpl.o: gpl.cpp Makefile
#	g++ -DSYMBOL_TABLE -DPRINT_SYMBOL_TABLE $(CPPFLAGS) -c gpl.cpp

# Phase 6, 7 : symbol table AND print the symbol table, with graphics
gpl.o: gpl.cpp Makefile
	g++ -DSYMBOL_TABLE -DPRINT_SYMBOL_TABLE -DGRAPHICS $(CPPFLAGS) -c gpl.cpp

# Phase 8 : symbol table with graphics
#gpl.o: gpl.cpp Makefile
#	g++ -DSYMBOL_TABLE -DGRAPHICS $(CPPFLAGS) -c gpl.cpp


y.tab.c y.tab.h: gpl.y
	bison -vyd gpl.y

y.tab.o: gpl.y
	bison -vyd gpl.y
	$(CXX) $(CPPFLAGS) -c y.tab.c

lex.yy.c: gpl.l
	flex gpl.l

# the -DYY_NO_UNPUT prevents a warning that yyunput() was defined but not used
lex.yy.o: lex.yy.c y.tab.h 
	$(CXX) $(CPPFLAGS) -DYY_NO_UNPUT -c lex.yy.c

make: y.tab.c lex.yy.c
	makedepend $(C++SRC) y.tab.c lex.yy.c gpl.y
	@echo "************************************************************"
	@echo "************************************************************"
	@echo "************************************************************"
	@echo "It is \"normal\" for makedepend to generate lots of errors"
	@echo "If the errors have to do with ANSI C++ include files, ignore them"
	@echo "************************************************************"

# has .exe for cygwin, but won't affect linux/unix
clean:
	rm -f $(C++OBJ) gpl gpl.exe lex.yy.c lex.yy.o \
	y.output y.tab.h y.tab.c y.tab.o \
	*.stackdump

# The following dependencies were generated by makedepend.
# makedepend is a utility that reads all source files and recursively finds
# all dependencies.  It puts a line below "# DO NOT DELETE" for each dependency
# makedepend does not come with cygwin, you have to go find it on the web
# DO NOT DELETE

error.o: error.h
gpl_assert.o: /usr/include/stdlib.h /usr/include/features.h
gpl_assert.o: /usr/include/alloca.h
gpl.o: parser.h gpl_type.h variable.h symbol.h game_object.h
gpl.o: /usr/include/GL/gl.h /usr/include/GL/glext.h /usr/include/inttypes.h
gpl.o: /usr/include/features.h /usr/include/stdint.h /usr/include/GL/glu.h
gpl.o: animation_block.h statement_block.h indent.h expression.h y.tab.h
gpl.o: error.h gpl_assert.h /usr/include/signal.h /usr/include/time.h
gpl.o: /usr/include/stdlib.h /usr/include/alloca.h /usr/include/string.h
gpl.o: /usr/include/xlocale.h /usr/include/stdio.h /usr/include/libio.h
gpl.o: /usr/include/_G_config.h /usr/include/wchar.h
indent.o: indent.h gpl_assert.h
variable.o: variable.h gpl_type.h symbol.h game_object.h /usr/include/GL/gl.h
variable.o: /usr/include/GL/glext.h /usr/include/inttypes.h
variable.o: /usr/include/features.h /usr/include/stdint.h
variable.o: /usr/include/GL/glu.h animation_block.h statement_block.h
variable.o: indent.h expression.h gpl_assert.h error.h symbol_table.h
expression.o: expression.h gpl_type.h symbol.h game_object.h
expression.o: /usr/include/GL/gl.h /usr/include/GL/glext.h
expression.o: /usr/include/inttypes.h /usr/include/features.h
expression.o: /usr/include/stdint.h /usr/include/GL/glu.h animation_block.h
expression.o: statement_block.h indent.h variable.h gpl_assert.h
expression.o: /usr/include/stdio.h /usr/include/libio.h
expression.o: /usr/include/_G_config.h /usr/include/wchar.h
expression.o: /usr/include/stdlib.h /usr/include/alloca.h
symbol.o: symbol.h gpl_type.h game_object.h /usr/include/GL/gl.h
symbol.o: /usr/include/GL/glext.h /usr/include/inttypes.h
symbol.o: /usr/include/features.h /usr/include/stdint.h /usr/include/GL/glu.h
symbol.o: animation_block.h statement_block.h indent.h variable.h
symbol_table.o: symbol_table.h symbol.h gpl_type.h game_object.h
symbol_table.o: /usr/include/GL/gl.h /usr/include/GL/glext.h
symbol_table.o: /usr/include/inttypes.h /usr/include/features.h
symbol_table.o: /usr/include/stdint.h /usr/include/GL/glu.h animation_block.h
symbol_table.o: statement_block.h indent.h variable.h /usr/include/assert.h
animation_block.o: animation_block.h statement_block.h indent.h gpl_assert.h
circle.o: circle.h game_object.h gpl_type.h /usr/include/GL/gl.h
circle.o: /usr/include/GL/glext.h /usr/include/inttypes.h
circle.o: /usr/include/features.h /usr/include/stdint.h /usr/include/GL/glu.h
circle.o: gpl_assert.h
event_manager.o: event_manager.h window.h gpl_assert.h
game_object.o: game_object.h gpl_type.h /usr/include/GL/gl.h
game_object.o: /usr/include/GL/glext.h /usr/include/inttypes.h
game_object.o: /usr/include/features.h /usr/include/stdint.h
game_object.o: /usr/include/GL/glu.h animation_block.h statement_block.h
game_object.o: indent.h gpl_assert.h error.h
pixmap.o: pixmap.h game_object.h gpl_type.h /usr/include/GL/gl.h
pixmap.o: /usr/include/GL/glext.h /usr/include/inttypes.h
pixmap.o: /usr/include/features.h /usr/include/stdint.h /usr/include/GL/glu.h
pixmap.o: /usr/include/GL/glut.h /usr/include/GL/freeglut_std.h
pixmap.o: /usr/include/stdlib.h /usr/include/alloca.h gpl_assert.h
pixmap.o: /usr/include/stdio.h /usr/include/libio.h /usr/include/_G_config.h
pixmap.o: /usr/include/wchar.h default_pixmap.h
rectangle.o: rectangle.h game_object.h gpl_type.h /usr/include/GL/gl.h
rectangle.o: /usr/include/GL/glext.h /usr/include/inttypes.h
rectangle.o: /usr/include/features.h /usr/include/stdint.h
rectangle.o: /usr/include/GL/glu.h gpl_assert.h
statement_block.o: statement_block.h indent.h gpl_assert.h
textbox.o: textbox.h game_object.h gpl_type.h /usr/include/GL/gl.h
textbox.o: /usr/include/GL/glext.h /usr/include/inttypes.h
textbox.o: /usr/include/features.h /usr/include/stdint.h
textbox.o: /usr/include/GL/glu.h /usr/include/GL/glut.h
textbox.o: /usr/include/GL/freeglut_std.h /usr/include/stdlib.h
textbox.o: /usr/include/alloca.h gpl_assert.h
triangle.o: triangle.h game_object.h gpl_type.h /usr/include/GL/gl.h
triangle.o: /usr/include/GL/glext.h /usr/include/inttypes.h
triangle.o: /usr/include/features.h /usr/include/stdint.h
triangle.o: /usr/include/GL/glu.h gpl_assert.h
window.o: window.h symbol_table.h symbol.h gpl_type.h game_object.h
window.o: /usr/include/GL/gl.h /usr/include/GL/glext.h
window.o: /usr/include/inttypes.h /usr/include/features.h
window.o: /usr/include/stdint.h /usr/include/GL/glu.h animation_block.h
window.o: statement_block.h indent.h variable.h event_manager.h gpl_assert.h
window.o: /usr/include/unistd.h /usr/include/getopt.h /usr/include/signal.h
window.o: /usr/include/time.h /usr/include/stdlib.h /usr/include/alloca.h
window.o: /usr/include/stdio.h /usr/include/libio.h /usr/include/_G_config.h
window.o: /usr/include/wchar.h /usr/include/string.h /usr/include/xlocale.h
window.o: /usr/include/GL/glut.h /usr/include/GL/freeglut_std.h
gpl_type.o: gpl_type.h gpl_assert.h
y.tab.o: error.h gpl_assert.h parser.h gpl_type.h variable.h symbol.h
y.tab.o: game_object.h /usr/include/GL/gl.h /usr/include/GL/glext.h
y.tab.o: /usr/include/inttypes.h /usr/include/features.h
y.tab.o: /usr/include/stdint.h /usr/include/GL/glu.h animation_block.h
y.tab.o: statement_block.h indent.h expression.h y.tab.h
y.tab.o: /usr/include/assert.h symbol_table.h circle.h pixmap.h
y.tab.o: /usr/include/GL/glut.h /usr/include/GL/freeglut_std.h
y.tab.o: /usr/include/stdlib.h /usr/include/alloca.h rectangle.h textbox.h
y.tab.o: triangle.h event_manager.h window.h
lex.yy.o: /usr/include/stdio.h /usr/include/features.h /usr/include/libio.h
lex.yy.o: /usr/include/_G_config.h /usr/include/wchar.h /usr/include/string.h
lex.yy.o: /usr/include/xlocale.h /usr/include/errno.h /usr/include/stdlib.h
lex.yy.o: /usr/include/alloca.h error.h parser.h gpl_type.h variable.h
lex.yy.o: symbol.h game_object.h /usr/include/GL/gl.h /usr/include/GL/glext.h
lex.yy.o: /usr/include/inttypes.h /usr/include/stdint.h /usr/include/GL/glu.h
lex.yy.o: animation_block.h statement_block.h indent.h expression.h y.tab.h
lex.yy.o: /usr/include/ctype.h /usr/include/endian.h /usr/include/unistd.h
lex.yy.o: /usr/include/getopt.h
gpl.o: error.h gpl_assert.h parser.h gpl_type.h variable.h symbol.h
gpl.o: game_object.h /usr/include/GL/gl.h /usr/include/GL/glext.h
gpl.o: /usr/include/inttypes.h /usr/include/features.h /usr/include/stdint.h
gpl.o: /usr/include/GL/glu.h animation_block.h statement_block.h indent.h
gpl.o: expression.h y.tab.h /usr/include/assert.h symbol_table.h circle.h
gpl.o: pixmap.h /usr/include/GL/glut.h /usr/include/GL/freeglut_std.h
gpl.o: /usr/include/stdlib.h /usr/include/alloca.h rectangle.h textbox.h
gpl.o: triangle.h event_manager.h window.h
