Terminals which are not used

   T_INT
   T_ERROR


State 2 conflicts: 1 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | empty

    4 declaration: T_ID T_ASSIGN T_LBRACE values T_RBRACE T_SEMIC
    5            | empty

    6 @1: /* empty */

    7 values: @1 int_values

    8 @2: /* empty */

    9 values: @2 string_values

   10 @3: /* empty */

   11 values: @3 double_values

   12 int_values: int_values T_COMMA T_INT_CONSTANT
   13           | T_INT_CONSTANT

   14 string_values: string_values T_COMMA T_STRING_CONSTANT
   15              | T_STRING_CONSTANT

   16 double_values: double_values T_COMMA T_DOUBLE_CONSTANT
   17              | T_DOUBLE_CONSTANT

   18 empty: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
T_COMMA (258) 12 14 16
T_ASSIGN (259) 4
T_LBRACE (260) 4
T_RBRACE (261) 4
T_INT (262)
T_SEMIC (263) 4
T_INT_CONSTANT (264) 12 13
T_ID (265) 4
T_ERROR (266)
T_STRING_CONSTANT (267) 14 15
T_DOUBLE_CONSTANT (268) 16 17


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
program (15)
    on left: 1, on right: 0
declaration_list (16)
    on left: 2 3, on right: 1 2
declaration (17)
    on left: 4 5, on right: 2
values (18)
    on left: 7 9 11, on right: 4
@1 (19)
    on left: 6, on right: 7
@2 (20)
    on left: 8, on right: 9
@3 (21)
    on left: 10, on right: 11
int_values (22)
    on left: 12 13, on right: 7 12
string_values (23)
    on left: 14 15, on right: 9 14
double_values (24)
    on left: 16 17, on right: 11 16
empty (25)
    on left: 18, on right: 3 5


state 0

    0 $accept: . program $end

    $default  reduce using rule 18 (empty)

    program           go to state 1
    declaration_list  go to state 2
    empty             go to state 3


state 1

    0 $accept: program . $end

    $end  shift, and go to state 4


state 2

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    T_ID  shift, and go to state 5

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 18 (empty)]
    T_ID      [reduce using rule 18 (empty)]
    $default  reduce using rule 1 (program)

    declaration  go to state 6
    empty        go to state 7


state 3

    3 declaration_list: empty .

    $default  reduce using rule 3 (declaration_list)


state 4

    0 $accept: program $end .

    $default  accept


state 5

    4 declaration: T_ID . T_ASSIGN T_LBRACE values T_RBRACE T_SEMIC

    T_ASSIGN  shift, and go to state 8


state 6

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 7

    5 declaration: empty .

    $default  reduce using rule 5 (declaration)


state 8

    4 declaration: T_ID T_ASSIGN . T_LBRACE values T_RBRACE T_SEMIC

    T_LBRACE  shift, and go to state 9


state 9

    4 declaration: T_ID T_ASSIGN T_LBRACE . values T_RBRACE T_SEMIC

    T_STRING_CONSTANT  reduce using rule 8 (@2)
    T_DOUBLE_CONSTANT  reduce using rule 10 (@3)
    $default           reduce using rule 6 (@1)

    values  go to state 10
    @1      go to state 11
    @2      go to state 12
    @3      go to state 13


state 10

    4 declaration: T_ID T_ASSIGN T_LBRACE values . T_RBRACE T_SEMIC

    T_RBRACE  shift, and go to state 14


state 11

    7 values: @1 . int_values

    T_INT_CONSTANT  shift, and go to state 15

    int_values  go to state 16


state 12

    9 values: @2 . string_values

    T_STRING_CONSTANT  shift, and go to state 17

    string_values  go to state 18


state 13

   11 values: @3 . double_values

    T_DOUBLE_CONSTANT  shift, and go to state 19

    double_values  go to state 20


state 14

    4 declaration: T_ID T_ASSIGN T_LBRACE values T_RBRACE . T_SEMIC

    T_SEMIC  shift, and go to state 21


state 15

   13 int_values: T_INT_CONSTANT .

    $default  reduce using rule 13 (int_values)


state 16

    7 values: @1 int_values .
   12 int_values: int_values . T_COMMA T_INT_CONSTANT

    T_COMMA  shift, and go to state 22

    $default  reduce using rule 7 (values)


state 17

   15 string_values: T_STRING_CONSTANT .

    $default  reduce using rule 15 (string_values)


state 18

    9 values: @2 string_values .
   14 string_values: string_values . T_COMMA T_STRING_CONSTANT

    T_COMMA  shift, and go to state 23

    $default  reduce using rule 9 (values)


state 19

   17 double_values: T_DOUBLE_CONSTANT .

    $default  reduce using rule 17 (double_values)


state 20

   11 values: @3 double_values .
   16 double_values: double_values . T_COMMA T_DOUBLE_CONSTANT

    T_COMMA  shift, and go to state 24

    $default  reduce using rule 11 (values)


state 21

    4 declaration: T_ID T_ASSIGN T_LBRACE values T_RBRACE T_SEMIC .

    $default  reduce using rule 4 (declaration)


state 22

   12 int_values: int_values T_COMMA . T_INT_CONSTANT

    T_INT_CONSTANT  shift, and go to state 25


state 23

   14 string_values: string_values T_COMMA . T_STRING_CONSTANT

    T_STRING_CONSTANT  shift, and go to state 26


state 24

   16 double_values: double_values T_COMMA . T_DOUBLE_CONSTANT

    T_DOUBLE_CONSTANT  shift, and go to state 27


state 25

   12 int_values: int_values T_COMMA T_INT_CONSTANT .

    $default  reduce using rule 12 (int_values)


state 26

   14 string_values: string_values T_COMMA T_STRING_CONSTANT .

    $default  reduce using rule 14 (string_values)


state 27

   16 double_values: double_values T_COMMA T_DOUBLE_CONSTANT .

    $default  reduce using rule 16 (double_values)
